{"version":3,"sources":["index.jsx"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,IAAI,MAAM,QAAQ,aAAR,CAAV;AACA,QAAQ,sBAAR;;;;;;;;;;;IAUM,M;;;AACF,oBAAY,KAAZ,EAAmB;AAAA;;AAAA,oHACT,KADS;;AAEf,cAAK,KAAL,GAAa;AACT,uBAAW,KADF;AAET,kBAAM,EAFG;AAGT,wBAAY,KAHH;AAIT,gCAAoB,MAAK,KAAL,CAAW,kBAAX,GAAgC,MAAK,KAAL,CAAW,kBAA3C,GAAgE,EAJ3E;AAKT,kBAAM,MAAK,KAAL,CAAW,IAAX,IAAmB,IAAnB,GAA0B,IAA1B,GAAiC;AAL9B,SAAb;AAOA,YAAI,UAAU,CAAC,aAAD,EAAgB,SAAhB,EAA2B,OAA3B,EAAoC,UAApC,CAAd;AACA,gBAAQ,OAAR,CAAgB,aAAI;AAChB,kBAAK,CAAL,IAAU,MAAK,CAAL,EAAQ,IAAR,OAAV;AACH,SAFD;AAVe;AAalB;;;;4CAEmB;AAAA;;AAChB,gBAAI,OAAO,KAAK,OAAL,CAAa,KAAK,KAAL,CAAW,IAAxB,CAAX;AACA,iBAAK,QAAL,CAAc,EAAC,MAAM,IAAP,EAAd;;AAEA,mBAAO,gBAAP,CAAwB,OAAxB,EAAiC,YAAK;AAClC,oBAAI,OAAK,KAAL,CAAW,SAAf,EAA0B;AACtB,2BAAK,QAAL,CAAc,EAAC,WAAW,KAAZ,EAAd;AACH;AACJ,aAJD,EAIG,KAJH;AAKH;;;kDAEyB,S,EAAW;AACjC,gBAAI,OAAO,KAAK,OAAL,CAAa,UAAU,IAAvB,CAAX;AACA,iBAAK,QAAL,CAAc,EAAC,MAAM,IAAP,EAAd;AACH;;;iCAEQ;AAAA;;AACL,mBACI;AAAA;gBAAA,EAAK,WAAW,IAAI,IAAJ,GAAW,eAA3B;gBACI;AAAA;oBAAA,EAAK,WAAW,IAAI,KAApB,EAA2B,SAAS,KAAK,WAAzC;oBACK,KAAK,KAAL,CAAW,IADhB;oBACqB,2BAAG,WAAU,kBAAb;AADrB,iBADJ;gBAII;AAAA;oBAAA,EAAK,WAAW,IAAI,KAApB,EAA2B,OAAQ,KAAK,KAAL,CAAW,SAAZ,GAAyB,EAAzB,GAA8B,EAAC,SAAS,MAAV,EAAhE;AACK,iCAAS,iBAAC,CAAD,EAAM;AACX,8BAAE,eAAF;AACH,yBAHN;oBAII;AAAA;wBAAA,EAAK,WAAW,IAAI,QAApB;wBACI,+BAAO,MAAK,UAAZ,EAAuB,UAAU,kBAAC,CAAD,EAAM;AACnC,uCAAK,QAAL,CAAc,CAAd;AACH,6BAFD,EAEG,SAAS,KAAK,KAAL,CAAW,UAFvB,GADJ;wBAII;AAAA;4BAAA;4BACK,KAAK,KAAL,CAAW,IAAX,IAAmB,IAAnB,GAA0B,IAA1B,GAAiC;AADtC;AAJJ,qBAJJ;oBAYI;AAAA;wBAAA,EAAK,WAAW,IAAI,OAApB;wBAEQ,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAAC,CAAD,EAAI,CAAJ,EAAS;AACzB,mCAAO;AAAA;gCAAA,EAAK,KAAK,CAAV,EAAa,WAAW,IAAI,MAA5B;gCAEC,EAAE,GAAF,CAAM,UAAC,EAAD,EAAK,CAAL,EAAU;AACZ,2CAAO;AAAA;wCAAA,EAAK,WAAW,IAAI,MAApB,EAA4B,KAAK,CAAjC;wCACH,+BAAO,MAAK,UAAZ,EAAuB,UAAU,kBAAC,CAAD,EAAM;AACnC,uDAAK,KAAL,CAAW,CAAX,EAAc,GAAG,EAAjB;AACH,6CAFD,EAEG,SAAS,GAAG,OAFf,GADG;wCAGsB;AAAA;4CAAA;4CAAQ,GAAG;AAAX;AAHtB,qCAAP;AAKH,iCAND;AAFD,6BAAP;AAWH,yBAZD;AAFR;AAZJ;AAJJ,aADJ;AAqCH;;;oCAEW,C,EAAG;AACX,cAAE,eAAF;AACA,iBAAK,QAAL,CAAc;AACV,2BAAW,CAAC,KAAK,KAAL,CAAW;AADb,aAAd;AAGH;;;gCAEO,C,EAAG;AACP,gBAAI,gBAAgB,EAApB;AACA,gBAAI,MAAM,KAAK,KAAL,CAAW,kBAArB;AACA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,EAAE,MAAtB,EAA8B,IAAI,IAAI,GAAtC,EAA2C;AACvC,oBAAI,MAAO,IAAI,GAAL,GAAY,EAAE,MAAd,GAAuB,EAAE,MAAzB,GAAkC,IAAI,GAAhD;AACA,oBAAI,aAAa,EAAE,KAAF,CAAQ,CAAR,EAAW,GAAX,CAAjB;AACA,8BAAc,IAAd,CAAmB,UAAnB;AACH;AACD,mBAAO,aAAP;AACH;;;8BAEK,C,EAAG,E,EAAI;AAAA;;AACT,cAAE,MAAF,CAAS,UAAT,CAAoB,UAApB,CAA+B,UAA/B,CAA0C,UAA1C,CAAqD,UAArD,CAAgE,KAAhE;AACA,gBAAI,OAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,aAAI;AAC/B,oBAAI,EAAE,GAAF,CAAM,cAAK;AACX,wBAAI,GAAG,EAAH,IAAS,EAAb,EAAiB;AACb,2BAAG,OAAH,GAAa,CAAC,GAAG,OAAjB;AACH;AACD,2BAAO,EAAP;AACH,iBALG,CAAJ;AAMA,uBAAO,CAAP;AACH,aARU,CAAX;AASA,iBAAK,QAAL,CAAc;AACV,sBAAM;AADI,aAAd;AAGA,gBAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AAAA;AACrB,wBAAI,aAAa,EAAjB;AACA,2BAAK,KAAL,CAAW,IAAX,CAAgB,OAAhB,CAAwB,aAAI;AACxB,0BAAE,OAAF,CAAU,cAAK;AACX,uCAAW,IAAX,CAAgB,EAAhB;AACH,yBAFD;AAGH,qBAJD;AAKA,2BAAK,KAAL,CAAW,QAAX,CAAoB,UAApB;AAPqB;AAQxB;AACJ;;;iCAEQ,C,EAAG;AAAA;;AACR,cAAE,MAAF,CAAS,UAAT,CAAoB,UAApB,CAA+B,UAA/B,CAA0C,KAA1C;AACA,gBAAI,eAAe,CAAC,KAAK,KAAL,CAAW,UAA/B;AACA,gBAAI,OAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,aAAI;AAC/B,kBAAE,GAAF,CAAM,cAAK;AACP,uBAAG,OAAH,GAAa,YAAb;AACH,iBAFD;AAGA,uBAAO,CAAP;AACH,aALU,CAAX;AAMA,iBAAK,QAAL,CAAc;AACV,4BAAY,YADF;AAEV,sBAAM;AAFI,aAAd;AAIA,gBAAI,KAAK,KAAL,CAAW,QAAf,EAAyB;AAAA;AACrB,wBAAI,aAAa,EAAjB;AACA,2BAAK,KAAL,CAAW,IAAX,CAAgB,OAAhB,CAAwB,aAAI;AACxB,0BAAE,OAAF,CAAU,cAAK;AACX,uCAAW,IAAX,CAAgB,EAAhB;AACH,yBAFD;AAGH,qBAJD;AAKA,2BAAK,KAAL,CAAW,QAAX,CAAoB,UAApB;AAPqB;AAQxB;AACJ;;;;EAzIgB,MAAM,S;;AA4I3B,OAAO,OAAP,GAAiB,MAAjB","file":"index.js","sourcesContent":["let React = require(\"react\");\r\nlet css = require(\"./index.css\");\r\nrequire(\"font-awesome-webpack\");\r\n\r\n/**\r\n * select component,props means:\r\n * text:display text\r\n * data:a json array,json struct is {id:*,name:*,checked:*}\r\n * optionNumPerColumn:how many options display in one column\r\n * lang:ui language,default en\r\n * callback:function after value change,param is current data\r\n */\r\nclass select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            panelShow: false,\r\n            data: [],\r\n            allChecked: false,\r\n            optionNumPerColumn: this.props.optionNumPerColumn ? this.props.optionNumPerColumn : 10,\r\n            lang: this.props.lang == \"ch\" ? \"ch\" : \"en\"\r\n        };\r\n        let bindArr = [\"panelToggle\", \"setData\", \"check\", \"allCheck\"];\r\n        bindArr.forEach(d=> {\r\n            this[d] = this[d].bind(this);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let data = this.setData(this.props.data);\r\n        this.setState({data: data});\r\n\r\n        window.addEventListener(\"click\", ()=> {\r\n            if (this.state.panelShow) {\r\n                this.setState({panelShow: false});\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let data = this.setData(nextProps.data);\r\n        this.setState({data: data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={css.base + \" react-select\"}>\r\n                <div className={css.input} onClick={this.panelToggle}>\r\n                    {this.props.text}<i className=\"fa fa-caret-down\"></i>\r\n                </div>\r\n                <div className={css.panel} style={(this.state.panelShow) ? {} : {display: \"none\"}}\r\n                     onClick={(e)=> {\r\n                         e.stopPropagation();\r\n                     }}>\r\n                    <div className={css.allCheck}>\r\n                        <input type=\"checkbox\" onChange={(e)=> {\r\n                            this.allCheck(e);\r\n                        }} checked={this.state.allChecked}/>\r\n                        <label>\r\n                            {this.state.lang == \"ch\" ? \"全选\" : \"check all\"}\r\n                        </label>\r\n                    </div>\r\n                    <div className={css.options}>\r\n                        {\r\n                            this.state.data.map((d, i)=> {\r\n                                return <div key={i} className={css.column}>\r\n                                    {\r\n                                        d.map((d1, j)=> {\r\n                                            return <div className={css.option} key={j}>\r\n                                                <input type=\"checkbox\" onChange={(e)=> {\r\n                                                    this.check(e, d1.id);\r\n                                                }} checked={d1.checked}/><label>{d1.name}</label>\r\n                                            </div>;\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    panelToggle(e) {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            panelShow: !this.state.panelShow\r\n        });\r\n    }\r\n\r\n    setData(d) {\r\n        let columnDataArr = [];\r\n        let num = this.state.optionNumPerColumn;\r\n        for (let i = 0; i < d.length; i = i + num) {\r\n            let end = (i + num) > d.length ? d.length : i + num;\r\n            let columnData = d.slice(i, end);\r\n            columnDataArr.push(columnData);\r\n        }\r\n        return columnDataArr;\r\n    }\r\n\r\n    check(e, id) {\r\n        e.target.parentNode.parentNode.parentNode.parentNode.parentNode.focus();\r\n        let data = this.state.data.map(d=> {\r\n            d = d.map(d1=> {\r\n                if (d1.id == id) {\r\n                    d1.checked = !d1.checked;\r\n                }\r\n                return d1;\r\n            });\r\n            return d;\r\n        });\r\n        this.setState({\r\n            data: data\r\n        });\r\n        if (this.props.callback) {\r\n            let sourceData = [];\r\n            this.state.data.forEach(d=> {\r\n                d.forEach(d1=> {\r\n                    sourceData.push(d1);\r\n                });\r\n            });\r\n            this.props.callback(sourceData);\r\n        }\r\n    }\r\n\r\n    allCheck(e) {\r\n        e.target.parentNode.parentNode.parentNode.focus();\r\n        let isAllChecked = !this.state.allChecked;\r\n        let data = this.state.data.map(d=> {\r\n            d.map(d1=> {\r\n                d1.checked = isAllChecked;\r\n            });\r\n            return d;\r\n        });\r\n        this.setState({\r\n            allChecked: isAllChecked,\r\n            data: data\r\n        });\r\n        if (this.props.callback) {\r\n            let sourceData = [];\r\n            this.state.data.forEach(d=> {\r\n                d.forEach(d1=> {\r\n                    sourceData.push(d1);\r\n                });\r\n            });\r\n            this.props.callback(sourceData);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = select;"]}