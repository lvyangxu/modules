{"version":3,"sources":["server.es6"],"names":[],"mappings":";;AAAA,IAAI,YAAY,QAAQ,0BAAR,CAAhB;AACA,QAAQ,gBAAR;AACA,IAAI,aAAa,IAAI,SAAJ,CAAc;AAC3B,UAAM,EADqB;AAE3B,cAAU,WAFiB;AAG3B,mBAAe,yBAAM;AACjB,gBAAQ,GAAR,CAAY,kBAAZ;AACH,KAL0B;AAM3B,mBAAe,0BAAK;AAChB,gBAAQ,GAAR,CAAY,eAAe,CAA3B;AACH,KAR0B;AAS3B,qBAAiB,4BAAK;AAClB,YAAI,IAAI,SAAJ,CAAI,GAAM;AACV,uBAAW,IAAX,CAAgB,CAAhB,EAAmB,MAAnB;AACA,uBAAW,CAAX,EAAc,IAAd;AACH,SAHD;AAIA;AAEH;AAhB0B,CAAd,CAAjB;;AAmBA,WAAW,MAAX","file":"server.js","sourcesContent":["let tcpServer = require(\"../karl-tcp-server/index\");\r\nrequire(\"babel-polyfill\");\r\nlet tcpServer1 = new tcpServer({\r\n    port: 80,\r\n    hostname: \"localhost\",\r\n    startCallback: () => {\r\n        console.log(\"tcp server start\");\r\n    },\r\n    errorCallback: d => {\r\n        console.log(\"tcp error:\" + d);\r\n    },\r\n    connectCallback: d => {\r\n        let s = () => {\r\n            tcpServer1.send(d, \"haha\");\r\n            setTimeout(s, 5000);\r\n        };\r\n        s();\r\n\r\n    }\r\n});\r\n\r\ntcpServer1.listen();\r\n\r\n\r\n\r\n\r\n\r\n"]}