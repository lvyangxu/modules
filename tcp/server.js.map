{"version":3,"sources":["server.es6"],"names":[],"mappings":";;AAAA,IAAI,MAAM,QAAQ,0BAAR,CAAV;AACA,QAAQ,gBAAR;AACA,IAAI,OAAO,IAAI,GAAJ,CAAQ;AACf,UAAM,IADS;AAEf,mBAAe,yBAAM;AACjB,gBAAQ,GAAR,CAAY,kBAAZ;AACH,KAJc;AAKf,mBAAe,0BAAK;AAChB,gBAAQ,GAAR,CAAY,eAAe,CAA3B;AACH,KAPc;AAQf,qBAAiB,4BAAK;AAClB,YAAI,IAAI,SAAJ,CAAI,GAAM;AACV,iBAAK,IAAL,CAAU,CAAV,EAAa,MAAb;AACA,uBAAW,CAAX,EAAc,IAAd;AACH,SAHD;AAIA;AAEH;AAfc,CAAR,CAAX;;AAkBA,KAAK,MAAL","file":"server.js","sourcesContent":["let tcp = require(\"../karl-tcp-server/index\");\r\nrequire(\"babel-polyfill\");\r\nlet tcp1 = new tcp({\r\n    port: 4000,\r\n    startCallback: () => {\r\n        console.log(\"tcp server start\");\r\n    },\r\n    errorCallback: d => {\r\n        console.log(\"tcp error:\" + d);\r\n    },\r\n    connectCallback: d => {\r\n        let s = () => {\r\n            tcp1.send(d, \"haha\");\r\n            setTimeout(s, 5000);\r\n        };\r\n        s();\r\n\r\n    }\r\n});\r\n\r\ntcp1.listen();\r\n\r\n\r\n\r\n\r\n\r\n"]}