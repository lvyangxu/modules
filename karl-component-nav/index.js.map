{"version":3,"sources":["index.jsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["let React = require(\"react\");\r\nlet css = require(\"./index.css\");\r\nrequire(\"font-awesome-webpack\");\r\nlet $ = require(\"jquery\");\r\n\r\n/**\r\n *\r\n */\r\nclass nav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            activeDom: \"\",\r\n            activeId: \"\"\r\n        };\r\n        let bindArr = [];\r\n        bindArr.forEach(d => {\r\n            this[d] = this[d].bind(this);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //设置菜单和内容的宽度和高度自适应\r\n        this.setSize();\r\n        window.addEventListener(\"resize\", e => {\r\n            this.setSize();\r\n        });\r\n\r\n        let data = this.props.data;\r\n        let activeId = data[0].id;\r\n        let activeDom = data[0].dom;\r\n\r\n        let json = {\r\n            data: data,\r\n            activeId: activeId,\r\n            activeDom: activeDom\r\n        };\r\n\r\n        //根据锚点设置默认选中的菜单\r\n        let hash = window.location.hash.replace(/#/g, \"\");\r\n        if (hash != \"\") {\r\n            let active = data.find(d => {\r\n                return d.id == hash;\r\n            });\r\n            if (active != undefined) {\r\n                json.activeId = hash;\r\n                json[\"group-show-\"+active.group] = true;\r\n            }\r\n        }\r\n\r\n        this.setState(json);\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={css.base + \" react-nav\"} ref={d => {\r\n                this.base = d;\r\n            }}>\r\n                <div className={css.menu} ref={d => {\r\n                    this.menu = d;\r\n                }}>\r\n                    {\r\n                        this.setMenu()\r\n                    }\r\n                </div>\r\n                <div className={css.content} ref={d => {\r\n                    this.content = d;\r\n                }}>\r\n                    {\r\n                        this.setContent()\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    setSize() {\r\n        let marginTop = $(this.base).offset().top;\r\n        let height = $(window).height() - marginTop;\r\n        let width = $(window).width() - 200;\r\n        $(this.menu).css({height: height});\r\n        $(this.content).css({\r\n            height: height,\r\n            width: width\r\n        });\r\n    }\r\n\r\n    setMenu() {\r\n        let groups = [];\r\n        this.state.data.forEach(d => {\r\n            if (!groups.includes(d.group)) {\r\n                groups.push(d.group);\r\n            }\r\n        });\r\n\r\n        let liArr = [];\r\n        this.state.data.forEach(d => {\r\n            if (d.hasOwnProperty(\"group\")) {\r\n                //如果含有group,判断是否添加过该group\r\n                let hasInclude = liArr.find(d1 => {\r\n                    return d1.group == d.group;\r\n                });\r\n\r\n                if (hasInclude != undefined) {\r\n                    //如果添加过该group,则将新的数据合并到该一级菜单下\r\n                    let li = <div onClick={() => {\r\n                        this.setState({\r\n                            activeId: d.id\r\n                        });\r\n                    }} key={d.id} className={this.state.activeId == d.id ?\r\n                        (css.active + \" \" + css.li + \" \" + css.li1) : (css.li + \" \" + css.li1)}>{d.name}</div>;\r\n                    liArr = liArr.map(d1 => {\r\n                        if (d1.group == d.group) {\r\n                            let arr = d1.dom.concat();\r\n                            arr.push(li);\r\n                            d1.dom = arr;\r\n                            return d1;\r\n                        } else {\r\n                            return d1;\r\n                        }\r\n                    })\r\n                } else {\r\n                    //如果没有添加过group,则新添加一个一级菜单\r\n                    let li = <div onClick={() => {\r\n                        this.setState({\r\n                            activeId: d.id\r\n                        });\r\n                    }} key={d.id} className={this.state.activeId == d.id ?\r\n                        (css.active + \" \" + css.li + \" \" + css.li1) : (css.li + \" \" + css.li1)}>{d.name}</div>;\r\n                    liArr.push({group: d.group, dom: [li]})\r\n                }\r\n            } else {\r\n                //如果不含有group属性，则为第一级菜单\r\n                let li = <div className={this.state.activeId == d.id ? (css.active + \" \" + css.li) : css.li}\r\n                              onClick={() => {\r\n                                  this.setState({\r\n                                      activeId: d.id\r\n                                  });\r\n                              }}>\r\n                    {d.name}\r\n                </div>;\r\n                liArr.push({dom: li});\r\n            }\r\n        });\r\n\r\n        let menu = liArr.map((d, i) => {\r\n            let showName = \"group-show-\" + d.group;\r\n            if (d.hasOwnProperty(\"group\")) {\r\n                return <div key={i}>\r\n                    <div className={css.li} onClick={() => {\r\n                        let json = {};\r\n                        json[showName] = !this.state[showName];\r\n                        this.setState(json);\r\n                    }}><i\r\n                        className={this.state[showName] ? \"fa fa-caret-down\" : \"fa fa-caret-right\"}></i>{d.group}\r\n                    </div>\r\n                    <div style={this.state[showName] ? {} : {display: \"none\"}}>{d.dom}</div>\r\n                </div>\r\n            } else {\r\n                return <div key={i}>{d.dom}</div>;\r\n            }\r\n        });\r\n        return menu;\r\n\r\n    }\r\n\r\n    setContent() {\r\n        let active = this.state.data.find(d => {\r\n            return d.id == this.state.activeId;\r\n        });\r\n        if (active != undefined) {\r\n            window.location.hash = active.id;\r\n        }\r\n\r\n        return this.state.data.map((d, i) => {\r\n            return <div key={i} style={d.id == this.state.activeId ? {} : {display: \"none\"}}>{d.dom}</div>;\r\n        });\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = nav;"]}