{"version":3,"sources":["index.es6"],"names":[],"mappings":";;;;;;AAAA,IAAI,IAAI,QAAQ,QAAR,CAAR;;IAEM,I;;;;;;;;;;;;;uCAMoB,K,EAAO;AACzB,gBAAI,UAAU,EAAE,IAAF,CAAO;AACjB,sBAAM,MAAM,IAAN,IAAc,MADH;AAEjB,qBAAK,MAAM,GAFM;AAGjB,uBAAO,KAHU;AAIjB,yBAAS,CAAC,MAAM,oBAAN,IAA8B,EAA/B,IAAqC,IAJ7B;AAKjB,sBAAM,MAAM,IALK;AAMjB,6BAAa,MAAM,WAAN,IAAqB,iDANjB;AAOjB,0BAAU,MAAM,QAAN,IAAkB;AAPX,aAAP,EAQX,IARW,CAQN,UAAU,IAAV,EAAgB;AACpB,sBAAM,eAAN,CAAsB,IAAtB;AACH,aAVa,EAUX,IAVW,CAUN,UAAU,cAAV,EAA0B,UAA1B,EAAsC,WAAtC,EAAmD;AACvD,sBAAM,eAAN,CAAsB,UAAtB;AACH,aAZa,CAAd;AAaA,mBAAO,OAAP;AACH;;;;;;;;;;;6BAQW,G,EAAK,I,EAAM;AACnB,gBAAI,UAAU,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AAC1C,uBAAQ,QAAQ,SAAT,GAAsB,EAAtB,GAA2B,IAAlC;AACA,qBAAK,cAAL,CAAoB;AAChB,yBAAK,GADW;AAEhB,0BAAM,IAFU;AAGhB,iCAAa,kBAHG;AAIhB,8BAAU,MAJM;AAKhB,qCAAiB,yBAAC,CAAD,EAAM;AACnB,4BAAI,EAAE,OAAF,IAAa,SAAb,IAA0B,EAAE,OAAF,IAAa,SAA3C,EAAsD;AAClD,mCAAO,qBAAqB,CAA5B;AACA;AACH;AACD,4BAAI,EAAE,OAAF,IAAa,MAAjB,EAAyB;AACrB,oCAAQ,EAAE,OAAV;AACH,yBAFD,MAEO;AACH,gCAAI,EAAE,OAAF,IAAa,cAAjB,EAAiC;AAC7B,uCAAO,QAAP,CAAgB,IAAhB,GAAuB,WAAvB;AACA;AACH;AACD,mCAAO,EAAE,OAAT;AACH;AACJ,qBAnBe;AAoBhB,qCAAiB,yBAAC,CAAD,EAAM;AACnB,+BAAO,wBAAwB,CAA/B;AACH;AAtBe,iBAApB;AAwBH,aA1Ba,CAAd;AA2BA,mBAAO,OAAP;AACH;;;;;;;;;;;4BAQU,G,EAAK,I,EAAM;AAClB,gBAAI,UAAU,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AAC1C,uBAAQ,QAAQ,SAAT,GAAsB,EAAtB,GAA2B,IAAlC;AACA,qBAAK,cAAL,CAAoB;AAChB,0BAAM,KADU;AAEhB,yBAAK,GAFW;AAGhB,0BAAM,IAHU;AAIhB,iCAAa,kBAJG;AAKhB,8BAAU,MALM;AAMhB,qCAAiB,yBAAC,CAAD,EAAM;AACnB,4BAAI,EAAE,OAAF,IAAa,SAAb,IAA0B,EAAE,OAAF,IAAa,SAA3C,EAAsD;AAClD,mCAAO,qBAAqB,CAA5B;AACA;AACH;AACD,4BAAI,EAAE,OAAF,IAAa,MAAjB,EAAyB;AACrB,oCAAQ,EAAE,OAAV;AACH,yBAFD,MAEO;AACH,gCAAI,EAAE,OAAF,IAAa,cAAjB,EAAiC;AAC7B,uCAAO,QAAP,CAAgB,IAAhB,GAAuB,WAAvB;AACA;AACH;AACD,mCAAO,EAAE,OAAT;AACH;AACJ,qBApBe;AAqBhB,qCAAiB,yBAAC,CAAD,EAAM;AACnB,+BAAO,wBAAwB,CAA/B;AACH;AAvBe,iBAApB;AAyBH,aA3Ba,CAAd;AA4BA,mBAAO,OAAP;AACH;;;;;;AAGL,OAAO,OAAP,GAAiB,IAAjB","file":"index.js","sourcesContent":["let $ = require(\"jquery\");\r\n\r\nclass http {\r\n    /**\r\n     * do ajax with jquery\r\n     * @param param ajax option\r\n     * @returns {*|void}\r\n     */\r\n    static doAjaxInJquery(param) {\r\n        let request = $.ajax({\r\n            type: param.type || \"post\",\r\n            url: param.url,\r\n            cache: false,\r\n            timeout: (param.requestTimeOutSecond || 30) * 1000,\r\n            data: param.data,\r\n            contentType: param.contentType || \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            dataType: param.dataType || \"text\"\r\n        }).done(function (data) {\r\n            param.successCallback(data);\r\n        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {\r\n            param.failureCallback(textStatus);\r\n        });\r\n        return request;\r\n    };\r\n\r\n    /**\r\n     * do http post with json contentType and dataType\r\n     * @param url\r\n     * @param data\r\n     * @returns {Promise}\r\n     */\r\n    static post(url, data) {\r\n        let promise = new Promise((resolve, reject)=> {\r\n            data = (data == undefined) ? {} : data;\r\n            http.doAjaxInJquery({\r\n                url: url,\r\n                data: data,\r\n                contentType: \"application/json\",\r\n                dataType: \"json\",\r\n                successCallback: (d)=> {\r\n                    if (d.success == undefined || d.message == undefined) {\r\n                        reject(\"unexpected json:\" + d);\r\n                        return;\r\n                    }\r\n                    if (d.success == \"true\") {\r\n                        resolve(d.message);\r\n                    } else {\r\n                        if (d.message == \"unauthorized\") {\r\n                            window.location.href = \"../login/\";\r\n                            return;\r\n                        }\r\n                        reject(d.message);\r\n                    }\r\n                },\r\n                failureCallback: (d)=> {\r\n                    reject(\"http request error:\" + d);\r\n                }\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    /**\r\n     * do http get with json contentType and dataType\r\n     * @param url\r\n     * @param data\r\n     * @returns {Promise}\r\n     */\r\n    static get(url, data) {\r\n        let promise = new Promise((resolve, reject)=> {\r\n            data = (data == undefined) ? {} : data;\r\n            http.doAjaxInJquery({\r\n                type: \"get\",\r\n                url: url,\r\n                data: data,\r\n                contentType: \"application/json\",\r\n                dataType: \"json\",\r\n                successCallback: (d)=> {\r\n                    if (d.success == undefined || d.message == undefined) {\r\n                        reject(\"unexpected json:\" + d);\r\n                        return;\r\n                    }\r\n                    if (d.success == \"true\") {\r\n                        resolve(d.message);\r\n                    } else {\r\n                        if (d.message == \"unauthorized\") {\r\n                            window.location.href = \"../login/\";\r\n                            return;\r\n                        }\r\n                        reject(d.message);\r\n                    }\r\n                },\r\n                failureCallback: (d)=> {\r\n                    reject(\"http request error:\" + d);\r\n                }\r\n            });\r\n        });\r\n        return promise;\r\n    }\r\n}\r\n\r\nmodule.exports = http;"]}