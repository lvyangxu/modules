{"version":3,"sources":["index.jsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["let React = require(\"react\");\r\nlet css = require(\"./index.css\");\r\nrequire(\"font-awesome-webpack\");\r\n\r\n/**\r\n * chart component,props means:\r\n */\r\nclass chart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let yDataMax = this.getYDataMax(this.props.y, this.props.data);\r\n        let yAxisNumArr = this.getYAxisNumArr(yDataMax);\r\n        let y = this.props.y.map(d=> {\r\n            let max = 230;\r\n            let r = Math.floor(Math.random() * max);\r\n            let g = Math.floor(Math.random() * max);\r\n            let b = Math.floor(Math.random() * max);\r\n            d.color = `rgba(${r},${g},${b},1)`;\r\n            return d;\r\n        });\r\n\r\n        this.state = {\r\n            x: this.props.x,\r\n            y: y,\r\n            title: this.props.title,\r\n            yAxisText: this.props.yAxisText,\r\n            type: this.props.type ? this.props.type : \"curve\",\r\n            data: this.props.data,\r\n            yAxisNumArr: yAxisNumArr,\r\n            xUnitLength: 100 * 0.8 / this.props.data.length,\r\n            yUnitLength: 50 * 0.8 / 10,\r\n            yDataMax: yDataMax,\r\n            angleNum: this.props.angleNum ? this.props.angleNum : 12,\r\n            endPointLineLength: this.props.endPointLineLength ? this.props.endPointLineLength : 0.1\r\n        };\r\n        let bindArr = [\"vectorTransform\", \"getYAxisNumArr\"];\r\n        bindArr.forEach(d=> {\r\n            this[d] = this[d].bind(this);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState(nextProps);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={css.base + \" react-chart\"}>\r\n                <svg viewBox=\"0 0 110 60\"  onMouseMove={this.setActive}>\r\n                    {\r\n                        this.state.title ? <g className={css.title}>\r\n                            <text x=\"50\" y=\"3\">{this.state.title}</text>\r\n                        </g> : \"\"\r\n                    }\r\n                    <g className={css.xAxis}>\r\n                        <path d=\"M10 55 h 80\"/>\r\n                        {\r\n                            this.state.data.map((d, i)=> {\r\n                                let w = this.state.xUnitLength;\r\n                                let x = i * w + 10;\r\n                                return <g key={i}>\r\n                                    <path d={`M${x} 55 v1`}/>\r\n                                    <text x={x + w / 2} y={60}>{d[this.state.x]}</text>\r\n                                </g>\r\n                            })\r\n                        }\r\n                    </g>\r\n                    <g className={css.yAxis}>\r\n                        {\r\n                            this.state.yAxisNumArr.map((d, i)=> {\r\n                                let y = 55 - i * this.state.yUnitLength;\r\n                                let yTextDelta = 1;\r\n                                return <text key={i} x={6} y={y - this.state.yUnitLength + yTextDelta}>{d}</text>\r\n                            })\r\n                        }\r\n                    </g>\r\n                    {\r\n                        this.state.yAxisText ? <g className={css.yAxisText}>\r\n                            <text x=\"3\" y=\"35\" transform=\"rotate(-90,3,35)\">{this.state.yAxisText}</text>\r\n                        </g> : \"\"\r\n                    }\r\n\r\n                    <g className={css.xGrid}>\r\n                        {\r\n                            this.state.yAxisNumArr.map((d, i)=> {\r\n                                let y = 55 - (i + 1) * this.state.yUnitLength;\r\n                                return <path key={i} d={`M10 ${y} h 80`}/>\r\n                            })\r\n                        }\r\n                        <path d={`M90 55 v1`}/>\r\n                    </g>\r\n                    {\r\n                        this.state.type == \"curve\" ?\r\n                            <g className={css.curve}>\r\n                                {\r\n                                    this.state.y.map((d, i)=> {\r\n                                        let lastX, lastY;\r\n                                        let path = this.state.data.filter(d1=> {\r\n                                            return d1.hasOwnProperty(d.id);\r\n                                        }).map(d1=> {\r\n                                            let id = d.id;\r\n                                            //find the index of x axis\r\n                                            let j = this.state.data.findIndex(d2=> {\r\n                                                return d1[this.state.x] == d2[this.state.x];\r\n                                            });\r\n                                            let {x, y} = this.vectorTransform({x: j, y: d1[id]});\r\n                                            let firstIndex = this.state.data.findIndex(d2=> {\r\n                                                return d2.hasOwnProperty(id);\r\n                                            });\r\n                                            let p = \"\";\r\n                                            if (j == firstIndex) {\r\n                                                p = `M ${x} ${y}`;\r\n                                            } else {\r\n                                                let {x1, y1, x2, y2} = this.getBezierCurvesVector(lastX, lastY, x, y);\r\n                                                p = `C ${x1} ${y1},${x2} ${y2},${x} ${y}`;\r\n                                            }\r\n                                            lastX = x;\r\n                                            lastY = y;\r\n                                            return p;\r\n                                        }).join(\" \");\r\n                                        let color = this.state.y[i].color;\r\n                                        return <path stroke={color} key={i} d={path}/>\r\n                                    })\r\n                                }\r\n                            </g>\r\n                            : \"\"\r\n                    }\r\n\r\n                    <g className={css.dots}>\r\n                        {\r\n                            this.state.y.map((d, i)=> {\r\n                                return this.state.data.filter(d1=> {\r\n                                    return d1.hasOwnProperty(d.id);\r\n                                }).map(d1=> {\r\n                                    let j = this.state.data.findIndex(d2=> {\r\n                                        return d1[this.state.x] == d2[this.state.x];\r\n                                    });\r\n                                    let {x, y} = this.vectorTransform({x: j, y: d1[d.id]});\r\n                                    let dots = this.getDotsSymbol(i, x, y);\r\n                                    return dots;\r\n                                })\r\n                            })\r\n                        }\r\n                    </g>\r\n                    <g className={css.declare}>\r\n                        {\r\n                            this.state.y.map((d, i)=> {\r\n                                let x = 91;\r\n                                let y = 15 + (40 - this.state.y.length * this.state.yUnitLength) / 2 + i * this.state.yUnitLength;\r\n                                let color = d.color;\r\n                                return <g key={i}>\r\n                                    <path stroke={color} d={`M${x} ${y} h3`}/>\r\n                                    {\r\n                                        this.getDotsSymbol(i, 92.5, y)\r\n                                    }\r\n                                    <text x=\"94.5\" y={y + 1}>{d.name}</text>\r\n                                </g>\r\n                            })\r\n                        }\r\n                    </g>\r\n\r\n\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //get max y num\r\n    getYDataMax(y, data) {\r\n        let yDataMax = 0;\r\n        y.forEach(d=> {\r\n            data.filter(d1=> {\r\n                return d1.hasOwnProperty(d.id);\r\n            }).forEach(d1=> {\r\n                let d2 = d1[d.id];\r\n                yDataMax = Math.max(d2, yDataMax);\r\n            })\r\n        });\r\n        return yDataMax;\r\n    }\r\n\r\n    getYAxisNumArr(yDataMax) {\r\n        let p = 0;\r\n        if (yDataMax > 1) {\r\n            //from 10 to bigger\r\n            p++;\r\n            while (yDataMax / 10 > 1) {\r\n                yDataMax = yDataMax / 10;\r\n                p++;\r\n            }\r\n        } else {\r\n            //from 0 to lower\r\n            while (yDataMax * 10 <= 1) {\r\n                yDataMax = yDataMax * 10;\r\n                p--;\r\n            }\r\n        }\r\n\r\n        let yAxisMax = Math.pow(10, p);\r\n        let yAxisNumArr = [];\r\n        for (let i = 1; i <= 10; i++) {\r\n            let y = i * yAxisMax * 0.1;\r\n            if (p <= 0) {\r\n                y = y.toFixed(-p + 1);\r\n            }\r\n            y = Number.parseFloat(y);\r\n            yAxisNumArr.push(y);\r\n        }\r\n        return yAxisNumArr;\r\n    }\r\n\r\n    //transform vector x,y coordinates to svg coordinates\r\n    vectorTransform(vector) {\r\n        let {x, y} = vector;\r\n        let w = this.state.xUnitLength;\r\n        x = x * w + 10 + w / 2;\r\n        let yMax = this.state.yAxisNumArr[0] * 10;\r\n        y = (1 - y / yMax) * 10 * 4 + 5;\r\n        y = y + 10;\r\n        return {x: x, y: y};\r\n    }\r\n\r\n    //get bezier curve point x1,y1 and x2,y2\r\n    getBezierCurvesVector(lastX, lastY, x, y) {\r\n        let angleNum = this.state.angleNum;\r\n        angleNum = angleNum / 180 * Math.PI;\r\n        let endPointLineLength = this.state.endPointLineLength;\r\n        let x1, y1, x2, y2;\r\n        let pathLength = Math.sqrt(Math.pow(Math.abs(y - lastY), 2) + Math.pow(x - lastX, 2));\r\n        let length = pathLength * endPointLineLength;\r\n        let atanAngle = Math.atan(Math.abs(y - lastY) / (x - lastX));\r\n        let anglePoint1 = Math.PI - angleNum - atanAngle;\r\n        let anglePoint2 = Math.PI - angleNum - (Math.PI / 2 - atanAngle);\r\n        let anglePoint1X = Math.cos(anglePoint1) * length;\r\n        let anglePoint1Y = Math.sin(anglePoint1) * length;\r\n        let anglePoint2X = Math.sin(anglePoint2) * length;\r\n        let anglePoint2Y = Math.cos(anglePoint2) * length;\r\n        x1 = Number.parseInt(lastX - anglePoint1X);\r\n        x2 = Number.parseInt(x - anglePoint2X);\r\n        if (y > lastY) {\r\n            //line goes lower\r\n            y1 = Number.parseInt(lastY + anglePoint1Y);\r\n            y2 = Number.parseInt(y + anglePoint2Y);\r\n        } else {\r\n            //line goes higher\r\n            y1 = Number.parseInt(lastY - anglePoint1Y);\r\n            y2 = Number.parseInt(y - anglePoint2Y);\r\n        }\r\n\r\n\r\n        let vector = {\r\n            x1: x1,\r\n            y1: y1,\r\n            x2: x2,\r\n            y2: y2\r\n        };\r\n        return vector;\r\n    }\r\n\r\n    //get dots symbol\r\n    getDotsSymbol(index, x, y) {\r\n        let dots, r;\r\n        let color = this.state.y[index].color;\r\n        switch (index % 5) {\r\n            //circle\r\n            case 0:\r\n                r = 0.3;\r\n                dots =\r\n                    <circle stroke={color} fill={color} cx={x} cy={y} r={r}/>;\r\n                break;\r\n            //square\r\n            case 1:\r\n                r = 0.4;\r\n                dots = <path stroke={color} fill={color}\r\n                             d={`M${x - r / 2} ${y - r / 2} h${r} v${r} h-${r} z`}/>;\r\n                break;\r\n            //square rotate -45 angle\r\n            case 2:\r\n                r = 0.4;\r\n                dots = <path stroke={color} fill={color}\r\n                             transform={`rotate(-45,${x},${y})`}\r\n                             d={`M${x - r / 2} ${y - r / 2} h${r} v${r} h-${r} z`}/>;\r\n                break;\r\n            //triangle\r\n            case 3:\r\n                r = 0.4;\r\n                dots = <path stroke={color} fill={color}\r\n                             d={`M${x - r / 2} ${y + r / 2} h${r} L${x} ${y - r / 2} z`}/>;\r\n                break;\r\n            //inverted triangle\r\n            case 4:\r\n                r = 0.4;\r\n                dots = <path stroke={color} fill={color}\r\n                             d={`M${x - r / 2} ${y - r / 2} h${r} L${x} ${y + r / 2} z`}/>;\r\n                break;\r\n\r\n        }\r\n        return dots;\r\n    }\r\n\r\n    //set active when mouse hover\r\n    setActive(e) {\r\n\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = chart;"]}